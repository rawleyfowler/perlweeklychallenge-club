#!/usr/bin/env nelua

require'sequence'
require'math'

local function good_triplets(s:sequence(integer),
			     x:integer,y:integer,z:integer):integer
  local count = 0
  for i=1,#s do
    for j=1,#s do
      for k=1,#s do
	if math.abs(s[i] - s[j]) <= x and
	  math.abs(s[j] - s[k]) <= y and
	  math.abs(s[i] - s[k]) <= z and
	  0 <= i and i < j and j < k and k <= #s then
	  count = count + 1
	end
      end
    end
  end
  return count
end

local s1:sequence(integer) = {3,0,1,1,9,7}
local s2:sequence(integer) = {1,1,2,2,3}
print(good_triplets(s1,7,2,3))
print(good_triplets(s2,0,0,1))

